#!/usr/bin/env bash
set -o pipefail
set -o nounset
set -o errexit
# set -o xtrace

PROGNAME="$(basename "$0")"
PROGDIR="$(dirname "$0")"

main () {
    . "${PROGDIR}/../share/fe/fe.sh"
    . "${PROGDIR}/../share/fe/shell-echo.sh"

    local -a THIS_COMMAND=("${0}" "${@}")

    local verbose=0
    local dry_run=0
    local exclude_binaries=0
    local exclude_quasi_binaries=0
    local include_all_directories=0
    local include_all_files=0
    local all=0
    local as_flat=0

    local -a initial_global_options=() # ones that must be specified first
    local -a global_options=()
    local -a starting_points=()
    local -a directory_excludes=()
    local -a file_excludes=()

    local -a find_directory_excludes=()
    local -a find_file_excludes=()
    local -a find_path_excludes=()

    local -a user_file_excludes=()
    local -a user_directory_excludes=()
    local -a user_path_excludes=()

    local -a find_file_includes=()

    local -a fefind_config_options=()
    local -a fegrep_config_options=()

    local -a allow_files=()
    local -a allow_dirs=()

    fe-config
    set -- ${fefind_config_options+"${fefind_config_options[@]}"} "$@"

    local ARGSHIFT=0
    get-find-arguments "$@"
    shift $((ARGSHIFT))

    local find='find'
    if [[ "$OSTYPE" = "darwin"* ]] && command -v gfind >/dev/null 2>/dev/null ; then
        find='gfind'
    fi

    if (( all >= 1 )) ; then
        include_all_directories=1
        include_all_files=1
    fi
    if (( all >= 2 )) ; then
        exclude_binaries=0
        exclude_quasi_binaries=0
    fi

    if (( ! include_all_directories )) ; then
        add-directory-excludes
    fi
    if (( ! include_all_files )) ; then
        add-file-excludes
    fi
    if (( exclude_binaries )) ; then
        add-binary-file-excludes
    fi
    if (( exclude_quasi_binaries )) ; then
        add-quasi-binary-file-excludes
    fi

    local allowfile
    local allowdir

    for allowfile in ${allow_files+"${allow_files[@]}"} ; do
        array-exclude file_excludes "$allowfile"
    done
    for allowdir in ${allow_dirs+"${allow_dirs[@]}"} ; do
        array-exclude directory_excludes "$allowdir"
    done

    convert-file-excludes
    convert-directory-excludes
    convert-path-excludes

    if (( verbose >= 2 )) ; then
        >&2 echo "fefind: initial global options:                         ${initial_global_options[@]@Q}"
        >&2 echo "fefind: starting points:                                ${starting_points[@]@Q}"
        >&2 echo "fefind: global options:                                 ${global_options[@]@Q}"
        >&2 echo "fefind: remaining arguments:                            ${@@Q}"
        >&2 echo "fefind: number of directory excludes:                   ${#directory_excludes[@]}"
        >&2 echo "fefind: number of file excludes:                        ${#file_excludes[@]}"
        >&2 echo "fefind: number of path excludes:                        ${#find_path_excludes[@]}"
        >&2 echo "fefind: number of directory exclude arguments for find: ${#find_directory_excludes[@]}"
        >&2 echo "fefind: number of file exclude arguments for find:      ${#find_file_excludes[@]}"
        >&2 echo "fefind: number of path exclude arguments for find:      ${#find_path_excludes[@]}"
        >&2 echo "fefind: allow ${allow_files[@]}"
        >&2 echo "fefind: allow_dirs ${allow_dirs[@]}"
    fi

    local -a find_command=()
    find_command+=("${find}")
    find_command+=(${initial_global_options+"${initial_global_options[@]}"})
    find_command+=(${starting_points+"${starting_points[@]}"})
    find_command+=(${global_options+"${global_options[@]}"})
    find_command+=(${find_path_excludes+"${find_path_excludes[@]}"})
    find_command+=(${find_directory_excludes+"${find_directory_excludes[@]}"})
    find_command+=(${find_file_excludes+"${find_file_excludes[@]}"})
    find_command+=(${find_file_includes+"${find_file_includes[@]}"})
    find_command+=("$@")

    if (( dry_run || verbose )) ; then
        echo "${find_command[@]@Q}"
    fi
    if (( dry_run )) ; then
        exit
    fi

    # do the thing
    exec ${find_command+"${find_command[@]}"}
}

add-directory-exclude () {
    directory_excludes+=("$@")
}
add-file-exclude () {
    file_excludes+=("$@")
}
add-binary-file-exclude () {
    binary_file_excludes+=("$@")
}
add-quasi-binary-file-exclude () {
    file_excludes+=("$@")
}

add-directory-excludes () {

    case "${PWD}" in
        */vendor|*/vendor/*)
            ;;
        *)
            add-directory-exclude 'vendor'
            ;;
    esac
    
    case "${PWD}" in
        */node_modules|*/node_modules/*)
            ;;
        *)
            add-directory-exclude 'node_modules'
            ;;
    esac

    add-directory-exclude '.cache'
    add-directory-exclude '.cpan'
    add-directory-exclude 'npm-cache'

    # version control
    add-directory-exclude '.git'
    add-directory-exclude '.svn'

    # others from emacs grep.el
    add-directory-exclude 'SCCS'
    add-directory-exclude 'RCS'
    add-directory-exclude 'CVS'
    add-directory-exclude 'MCVS'
    add-directory-exclude '.src'
    add-directory-exclude '.hg'
    add-directory-exclude '.bzr'
    add-directory-exclude '_MTN'
    add-directory-exclude '_darcs'
    add-directory-exclude '{arch}'
    add-directory-exclude '.sass-cache'

    # BigCommerce
    add-directory-exclude 'parsed/templates'
    add-directory-exclude 'parsed/scss'

    # emacs
    add-directory-exclude 'elpa'

    # etc.
    add-directory-exclude 'zip-cache'

    # nytprof
    'nytprof'

    # etc.
    'zip-cache'
}

add-file-excludes () {

    # backups
    add-file-exclude '*~'
    add-file-exclude '#*#'
    add-file-exclude '.*~'
    add-file-exclude '.#*'
    add-file-exclude '*.bak'
    add-file-exclude '*.tmp'
    add-file-exclude '*.old'
    add-file-exclude '*.orig'
    add-file-exclude '*.bak.*'
    add-file-exclude '*.tmp.*'
    add-file-exclude '*.old.*'
    add-file-exclude '*.orig.*'

    # minified/map files
    add-file-exclude '*.min'
    add-file-exclude '*.min.*'
    add-file-exclude '*.css.map'
    add-file-exclude '*.js.map'
    add-file-exclude '*.min.map'
    add-file-exclude '*.bundle.js'
    add-file-exclude '*.chunk.js'

    # simply huge
    add-file-exclude 'package-lock.json'
    add-file-exclude 'yarn.lock'
    add-file-exclude 'composer.lock'

    # BigCommerce minified
    add-file-exclude 'theme-bundle.main.js'
    add-file-exclude 'theme.scss.json'
    add-file-exclude 'assets/dist/report.html'
    add-file-exclude 'parsed/lang.json'
    add-file-exclude 'theme-bundle.chunk.*.js'
    add-file-exclude 'theme-bundle.head_async.js'

    # projectile
    add-file-exclude 'projectile.cache'

    # emacs
    add-file-exclude 'ido.last'

    # nytprof
    'nytprof.out'

    # emacs
    'ido.last'
}

add-binary-file-excludes () {

    # compressed archives
    add-file-exclude '*.7z'
    add-file-exclude '*.s7z'
    add-file-exclude '*.ace'
    add-file-exclude '*.afa'
    add-file-exclude '*.alz'
    add-file-exclude '*.apk'
    add-file-exclude '*.arc'
    add-file-exclude '*.ark'
    add-file-exclude '*.cdx'
    add-file-exclude '*.arj'
    add-file-exclude '*.b1'
    add-file-exclude '*.b6z'
    add-file-exclude '*.ba'
    add-file-exclude '*.bh'
    add-file-exclude '*.cab'
    add-file-exclude '*.car'
    add-file-exclude '*.cfs'
    add-file-exclude '*.cpt'
    add-file-exclude '*.dar'
    add-file-exclude '*.dd'
    add-file-exclude '*.dgc'
    add-file-exclude '*.dmg'
    add-file-exclude '*.ear'
    add-file-exclude '*.gca'
    add-file-exclude '*.genozip'
    add-file-exclude '*.hki'
    add-file-exclude '*.ice'
    add-file-exclude '*.jar'
    add-file-exclude '*.kgb'
    add-file-exclude '*.lzh'
    add-file-exclude '*.lza'
    add-file-exclude '*.lzx'
    add-file-exclude '*.pak'
    add-file-exclude '*.partimg'
    add-file-exclude '*.paq6'
    add-file-exclude '*.paq7'
    add-file-exclude '*.paq8'
    add-file-exclude '*.pea'
    add-file-exclude '*.phar'
    add-file-exclude '*.pim'
    add-file-exclude '*.pit'
    add-file-exclude '*.qda'
    add-file-exclude '*.rar'
    add-file-exclude '*.rk'
    add-file-exclude '*.sda'
    add-file-exclude '*.sea'
    add-file-exclude '*.sen'
    add-file-exclude '*.sfx'
    add-file-exclude '*.shk'
    add-file-exclude '*.sit'
    add-file-exclude '*.sitx'
    add-file-exclude '*.sqx'
    add-file-exclude '*.uc'
    add-file-exclude '*.uc0'
    add-file-exclude '*.uc2'
    add-file-exclude '*.ucn'
    add-file-exclude '*.ur2'
    add-file-exclude '*.ue2'
    add-file-exclude '*.uca'
    add-file-exclude '*.uha'
    add-file-exclude '*.war'
    add-file-exclude '*.wim'
    add-file-exclude '*.xar'
    add-file-exclude '*.xp3'
    add-file-exclude '*.yz1'
    add-file-exclude '*.zip'
    add-file-exclude '*.zipx'
    add-file-exclude '*.zoo'
    add-file-exclude '*.zpaq'
    add-file-exclude '*.zz'
    #
    add-file-exclude '*.sym'
    add-file-exclude '*.tar.*'

    # compressed files
    add-file-exclude '*.br'
    add-file-exclude '*.bz2'
    add-file-exclude '*.genozip'
    add-file-exclude '*.gz'
    add-file-exclude '*.lz'
    add-file-exclude '*.lz4'
    add-file-exclude '*.lzma'
    add-file-exclude '*.lzo'
    add-file-exclude '*.rz'
    add-file-exclude '*.sfark'
    add-file-exclude '*.sz'
    add-file-exclude '*.xz'
    add-file-exclude '*.z'
    add-file-exclude '*.Z'
    add-file-exclude '*.zst'

    # software pkging
    add-file-exclude '*.deb'
    add-file-exclude '*.pkg'
    add-file-exclude '*.mpkg'
    add-file-exclude '*.rpm'
    add-file-exclude '*.tgz'
    add-file-exclude '*.msi'
    add-file-exclude '*.appx'
    add-file-exclude '*.emsix'
    add-file-exclude '*.msix'
    add-file-exclude '*.appxbundle'
    add-file-exclude '*.emsixbundle'
    add-file-exclude '*.msixbundle'
    add-file-exclude '*.jar'
    add-file-exclude '*.crx'
    
    # images
    add-binary-file-exclude '*.gif'
    add-binary-file-exclude '*.jpg'
    add-binary-file-exclude '*.jpeg'
    add-binary-file-exclude '*.png'
    add-binary-file-exclude '*.webp'
    add-binary-file-exclude '*.heic'

    # fonts
    add-binary-file-exclude '*.ttf'
    add-binary-file-exclude '*.otf'
    add-binary-file-exclude '*.ttc'
    add-binary-file-exclude '*.woff'
    add-binary-file-exclude '*.eot'
    add-binary-file-exclude '*.pfb'

    # executables and libraries
    add-binary-file-exclude '*.exe'
    add-binary-file-exclude '*.a'
    add-binary-file-exclude '*.o'
    add-binary-file-exclude '*.so'
    add-binary-file-exclude '*.dll'
    add-binary-file-exclude '*.dylib'
    add-binary-file-exclude '*.com' # a la command.com
    add-binary-file-exclude '*.sys' # a la config.sys

    # Legacy Microsoft Office
    add-binary-file-exclude '*.doc'
    add-binary-file-exclude '*.ppt'
    add-binary-file-exclude '*.xls'

    # Media
    add-binary-file-exclude '*.mov'
    add-binary-file-exclude '*.m4a'
    add-binary-file-exclude '*.qt'
    add-binary-file-exclude '*.wma'
    add-binary-file-exclude '*.mp3'
    add-binary-file-exclude '*.m4r'
    add-binary-file-exclude '*.flv'
    add-binary-file-exclude '*.wmv'
    add-binary-file-exclude '*.swf'

    # Dalvik
    add-binary-file-exclude '*.dex'

    # Java
    add-binary-file-exclude '*.class'

    # Misc.
    add-binary-file-exclude '*.bin'
    add-binary-file-exclude '*.lbin'
    add-binary-file-exclude '*.flat'

    # Others from emacs grep.el.  I'm assuming these are binary
    # formats.
    add-binary-file-exclude '*.ln'
    add-binary-file-exclude '*.blg'
    add-binary-file-exclude '*.bbl'
    add-binary-file-exclude '*.elc'
    add-binary-file-exclude '*.lof'
    add-binary-file-exclude '*.glo'
    add-binary-file-exclude '*.idx'
    add-binary-file-exclude '*.lot'
    add-binary-file-exclude '*.fmt'
    add-binary-file-exclude '*.tfm'
    add-binary-file-exclude '*.fas'
    add-binary-file-exclude '*.lib'
    add-binary-file-exclude '*.mem'
    add-binary-file-exclude '*.x86f'
    add-binary-file-exclude '*.sparcf'
    add-binary-file-exclude '*.dfsl'
    add-binary-file-exclude '*.pfsl'
    add-binary-file-exclude '*.d64fsl'
    add-binary-file-exclude '*.p64fsl'
    add-binary-file-exclude '*.lx64fsl'
    add-binary-file-exclude '*.lx32fsl'
    add-binary-file-exclude '*.dx64fsl'
    add-binary-file-exclude '*.dx32fsl'
    add-binary-file-exclude '*.fx64fsl'
    add-binary-file-exclude '*.fx32fsl'
    add-binary-file-exclude '*.sx64fsl'
    add-binary-file-exclude '*.sx32fsl'
    add-binary-file-exclude '*.wx64fsl'
    add-binary-file-exclude '*.wx32fsl'
    add-binary-file-exclude '*.fasl'
    add-binary-file-exclude '*.ufsl'
    add-binary-file-exclude '*.fsl'
    add-binary-file-exclude '*.dxl'
    add-binary-file-exclude '*.lo'
    add-binary-file-exclude '*.la'
    add-binary-file-exclude '*.gmo'
    add-binary-file-exclude '*.mo'
    add-binary-file-exclude '*.toc'
    add-binary-file-exclude '*.aux'
    add-binary-file-exclude '*.cp'
    add-binary-file-exclude '*.fn'
    add-binary-file-exclude '*.ky'
    add-binary-file-exclude '*.pg'
    add-binary-file-exclude '*.tp'
    add-binary-file-exclude '*.vr'
    add-binary-file-exclude '*.cps'
    add-binary-file-exclude '*.fns'
    add-binary-file-exclude '*.kys'
    add-binary-file-exclude '*.pgs'
    add-binary-file-exclude '*.tps'
    add-binary-file-exclude '*.vrs'
    add-binary-file-exclude '*.pyc'
    add-binary-file-exclude '*.pyo'
    add-binary-file-exclude '*.ri'

    # anroid lol
    add-binary-file-exclude '*.apk'
    add-binary-file-exclude '*.aab'
    add-binary-file-exclude '*.dex'
    add-binary-file-exclude '*.ap_'

    # archiving only
    add-binary-file-exclude '*.a'
    add-binary-file-exclude '*.ar'
    add-binary-file-exclude '*.cpio'
    add-binary-file-exclude '*.lbr'
    add-binary-file-exclude '*.iso'
    add-binary-file-exclude '*.mar'
    add-binary-file-exclude '*.sbx'
    add-binary-file-exclude '*.tar'
    add-binary-file-exclude '*.shar'
}

add-quasi-binary-file-excludes () {
    add-file-exclude '*.doc'
    add-file-exclude '*.docx'
    add-file-exclude '*.xls'
    add-file-exclude '*.xlsx'
    add-file-exclude '*.ppt'
    add-file-exclude '*.pptx'
    add-file-exclude '*.pdf'
    add-file-exclude '*.ps'
    add-file-exclude '*.sfd'    # FontForge fonts
    add-file-exclude '*.shar'
}

convert-file-excludes () {
    find_file_excludes=()
    local exclude
    for exclude in ${file_excludes+"${file_excludes[@]}"} ${user_file_excludes+"${user_file_excludes[@]}"} ; do
        if (( as_flat )) ; then
            case "${exclude}" in
                */*)
                    find_file_excludes+=(\! -ipath "*/${exclude}")
                    ;;
                *)
                    find_file_excludes+=(\! -iname "${exclude}")
                    ;;
            esac
        else
            if (( ${#find_file_excludes[@]} )) ; then
                find_file_excludes+=("-o")
            fi
            case "${exclude}" in
                */*)
                    find_file_excludes+=("-ipath" "*/${exclude}")
                    ;;
                *)
                    find_file_excludes+=("-iname" "${exclude}")
                    ;;
            esac
        fi
    done
    if (( ! as_flat )) ; then
        if (( ${#find_file_excludes[@]} )) ; then
            find_file_excludes=(
                \! \( ${find_file_excludes+"${find_file_excludes[@]}"} \)
            )
        fi
    fi
}

convert-directory-excludes () {
    find_directory_excludes=()
    local exclude
    for exclude in ${directory_excludes+"${directory_excludes[@]}"} ${user_directory_excludes+"${user_directory_excludes[@]}"} ; do
        if (( as_flat )) ; then
            case "${exclude}" in
                /*)
                    find_directory_excludes+=(
                        \! \( -type d -ipath "${exclude}" -prune \)
                    )
                    ;;
                */*)
                    find_directory_excludes+=(
                        \! \( -type d -ipath "*/${exclude}" -prune \)
                    )
                    ;;
                *)
                    find_directory_excludes+=(
                        \! \( -type d -iname "${exclude}" -prune \)
                    )
                    ;;
            esac
        else
            if (( ${#find_directory_excludes[@]} )) ; then
                find_directory_excludes+=("-o")
            fi
            case "${exclude}" in
                /*)
                    find_directory_excludes+=("-ipath" "${exclude}")
                    ;;
                */*)
                    find_directory_excludes+=("-ipath" "*/${exclude}")
                    ;;
                *)
                    find_directory_excludes+=("-iname" "${exclude}")
                    ;;
            esac
        fi
    done
    if (( ! as_flat )) ; then
        if (( ${#find_directory_excludes[@]} )) ; then
            find_directory_excludes=(
                \! \( -type d \( ${find_directory_excludes+"${find_directory_excludes[@]}"} \) -prune \)
            )
        fi
    fi
}

convert-path-excludes () {
    find_path_excludes=()
    local exclude
    for exclude in ${user_path_excludes+"${user_path_excludes[@]}"} ; do
        case "${exclude}" in
            *'/*')
                find_path_excludes+=(\! -ipath "${exclude}")
                ;;
            *)
                find_path_excludes+=(\! -ipath "${exclude}")
                find_path_excludes+=(\! -ipath "${exclude}/*")
                ;;
        esac
    done
}

append-find-file-includes () {
    local i
    for i ; do
        if (( ${#find_file_includes[@]} )) ; then
            find_file_includes+=(-o)
        fi
        find_file_includes+=(-name "$i")
    done
}

get-find-arguments () {
    local numargsin="$#"
    while (( $# )) ; do
        # FIXME:
        #
        # why do some clauses have a "shift" cmd yet others don't?
        case "$1" in

            # multiple file extension options
            '--.js')
                # https://www.npmjs.com/package/common-js-file-extensions
                append-find-file-includes "*.js"
                append-find-file-includes "*.mjs"
                append-find-file-includes "*.cjs"
                append-find-file-includes "*.jsx"
                append-find-file-includes "*.es6"
                append-find-file-includes "*.es"
                append-find-file-includes "*.iced"
                append-find-file-includes "*.liticed"
                append-find-file-includes "*.iced.md"
                append-find-file-includes "*.cs"
                append-find-file-includes "*.coffee"
                append-find-file-includes "*.litcoffee"
                append-find-file-includes "*.coffee.md"
                append-find-file-includes "*.ts"
                append-find-file-includes "*.tsx"
                append-find-file-includes "*.ls"
                append-find-file-includes "*.sjs"
                append-find-file-includes "*.eg"
                ;;
            '--.html')
                append-find-file-includes "*.htm"
                append-find-file-includes "*.html"
                append-find-file-includes "*.xhtml"
                append-find-file-includes "*.php"
                ;;
            '--.'?*)
                >&2 echo "invalid multi-extension file type: $1"
                exit 1
                ;;

            # single file extension
            '-.'?*)
                append-find-file-includes "*${1#-}"
		shift
                ;;

            '--all'|'-A')
                all=$((all + 1))
                ;;
            '--verbose'|'-v')
                shift
                verbose=$((verbose + 1))
                # >&2 echo "fegrep: verbose=${verbose}"
                ;;
            '--dry-run'|'-n')
                shift
                dry_run=1
                ;;
            '--flat'|'--flatten'|'--as-flat')
                shift
                as_flat=1
                ;;
            '--help'|'-h')
                usage
                exit 0
                ;;
            '--exclude-binaries'|'--exclude-binary'|'--exclude-binary-files')
                shift
                exclude_binaries=1
                ;;
            '--include-binaries'|'--include-binary'|'--include-binary-files')
                shift
                exclude_binaries=0
                ;;
            '--exclude-quasi-binaries'|'--exclude-quasi-binary'|'--exclude-quasi-binary-files')
                shift
                exclude_quasi_binaries=1
                ;;
            '--include-quasi-binaries'|'--include-quasi-binary'|'--include-quasi-binary-files')
                shift
                exclude_quasi_binaries=0
                ;;
            '--all-directories'|'--include-all-directories')
                shift
                include_all_directories=1
                ;;
            '--all-files'|'--include-all-files')
                shift
                include_all_files=1
                ;;

            '--allow')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: --allow requires an argument"
                    exit 1
                fi
                allow_files+=("$1")
                shift
                ;;
            '--allow-dir')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: --allow requires an argument"
                    exit 1
                fi
                allow_dirs+=("$1")
                shift
                ;;
            '--allow'=*)
                allow_files+=("${1#*=}")
                shift
                ;;
            '--allow-dir'=*)
                allow_dirs+=("${1#*=}")
                shift
                ;;

            '--exclude')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: --exclude requires an argument"
                    exit 1
                fi
                user_file_excludes+=("$1")
                shift
                ;;
            '--exclude-dir')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: --exclude-dir requires an argument"
                    exit 1
                fi
                user_directory_excludes+=("$1")
                shift
                ;;
            '--exclude-path')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: --exclude-path requires an argument"
                    exit 1
                fi
                user_path_excludes+=("$1")
                shift
                ;;

            '--exclude='*)
                user_file_excludes+=("${1#*=}")
                shift
                ;;
            '--exclude-dir='*)
                user_directory_excludes+=("${1#*=}")
                shift
                ;;
            '--exclude-path='*)
                user_path_excludes+=("${1#*=}")
                shift
                ;;
            '-X='?*)
                user_file_excludes+=("${1#-X=}")
                user_directory_excludes+=("${1#-X=}")
                ;;
            '-X'?*)
                user_file_excludes+=("${1#-X}")
                user_directory_excludes+=("${1#-X}")
                ;;
            '-X')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: -X requires an argument"
                    exit 1
                fi
                user_file_excludes+=("$1")
                user_directory_excludes+=("$1")
                ;;
            '-mindepth'|'--mindepth'|'--min-depth')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: -mindepth requires an argument"
                    exit 1
                fi
                global_options+=(-mindepth "$1")
                shift
                ;;
            '-maxdepth'|'--maxdepth'|'--max-depth')
                shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: -maxdepth requires an argument"
                    exit 1
                fi
                global_options+=(-maxdepth "$1")
                shift
                ;;

            '--'*)
                >&2 echo "${PROGNAME}: ${1}: unknown option or option does not take an argument"
                exit 1
                ;;

            '-D'|'-O')
                option="$1"; shift
                if (( ! $# )) ; then
                    >&2 echo "${PROGNAME}: ${option} requires an argument"
                    exit 1
                fi
                optarg="$1"; shift
                case "$option" in
                    '-O')
                        initial_global_options+=("-O${optarg}")
                        ;;
                    '-D')
                        initial_global_options+=("-D" "${optarg}")
                        ;;
                esac
                ;;
            '-D'*|'-O'*)
                option="${1:0:2}"; optarg="${1:2}"; shift
                case "$option" in
                    '-O')
                        initial_global_options+=("-O${optarg}")
                        ;;
                    '-D')
                        initial_global_options+=("-D" "${optarg}")
                        ;;
                esac
                ;;
            '-H'|'-L'|'-P')
                initial_global_options+=("$1")
                shift
                ;;

            '!')
                break
                ;;
            '(')
                break
                ;;
            '-'*)
                # either a global option:
                #     -d
                #     -depth
                #     ...
                # or a test:
                #     -mtime
                #     -type
                # or an action:
                #     -exec
                #     -print
                # or an operator:
                #     -not
                break
                ;;

            *)
                starting_points+=("$1")
                shift
                ;;
        esac
    done

    if (( ${#find_file_includes[@]} )) ; then
        find_file_includes=(
            '(' "${find_file_includes[@]}" ')'
        )
    fi

    local numargsout="$#"
    ARGSHIFT=$(( numargsin - numargsout ))
}

usage () { cat <<EOF; }
usage:
    ${PROGNAME} [<option> ...] [<find-argument> ...]
options:
    --help                      display this message
    --verbose                   verbosity
    --dry-run                   take no action; output commands
    --exclude-binaries          exclude binary files from results
    --include-binaries          include binary files in results (default)
    --exclude-quasi-binaries    exclude pdf/ps/office/etc. docs
    --include-quasi-binaries    include pdf/ps/office/etc. docs (default)
    --all-directories           remove default directory exclusions
    --all-files                 remove default file exclusions
    --exclude=<glob>            specify additional files to exclude
    --exclude-dir=<glob>        specify additional directories to exclude
    --exclude-path=<glob>       specify appropriate \! -ipath args. to find
options passed to find:
    -O <level>              enable query optimization
    -D <options>            print diagnostic information
    -H                      only follow symb. links when processing arguments
    -L                      always follow symb. links
    -P                      never follow symb. links (default)
    -mindepth <num>
    -maxdepth <num>
EOF

###############################################################################

main "$@"
