#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o nounset
shopt -s lastpipe

declare -i print_command=0
declare -a user_exclude_files=()
declare -a user_include_files=()

main () {
    while (( $# )) ; do
        case "$1" in
            --print-command)
                print_command=1
                shift
                ;;
            --list-excludes)
                list_excludes
                exit 0
                ;;
            -.html)
                user_include_files+=(-o -name "*.xhtml")
                user_include_files+=(-o -name "*.html")
                user_include_files+=(-o -name "*.htm")
                user_include_files+=(-o -name "*.php")
                shift
                ;;
            -.css)
                user_include_files+=(-o -name "*.css")
                user_include_files+=(-o -name "*.scss")
                shift
                ;;
            -.js)
                user_include_files+=(-o -name "*.js")
                user_include_files+=(-o -name "*.mjs")
                user_include_files+=(-o -name "*.cjs")
                user_include_files+=(-o -name "*.jsx")
                user_include_files+=(-o -name "*.es6")
                user_include_files+=(-o -name "*.es")
                user_include_files+=(-o -name "*.iced")
                user_include_files+=(-o -name "*.liticed")
                user_include_files+=(-o -name "*.iced.md")
                user_include_files+=(-o -name "*.cs")
                user_include_files+=(-o -name "*.coffee")
                user_include_files+=(-o -name "*.litcoffee")
                user_include_files+=(-o -name "*.coffee.md")
                user_include_files+=(-o -name "*.ts")
                user_include_files+=(-o -name "*.tsx")
                user_include_files+=(-o -name "*.ls")
                user_include_files+=(-o -name "*.sjs")
                user_include_files+=(-o -name "*.eg")
                shift
                ;;
            +.html)
                user_exclude_files+=(\! -name "*.xhtml")
                user_exclude_files+=(\! -name "*.html")
                user_exclude_files+=(\! -name "*.htm")
                user_exclude_files+=(\! -name "*.php")
                shift
                ;;
            +.css)
                user_exclude_files+=(\! -name "*.css")
                user_exclude_files+=(\! -name "*.scss")
                shift
                ;;
            +.js)
                user_exclude_files+=(\! -name "*.js")
                user_exclude_files+=(\! -name "*.mjs")
                user_exclude_files+=(\! -name "*.cjs")
                user_exclude_files+=(\! -name "*.jsx")
                user_exclude_files+=(\! -name "*.es6")
                user_exclude_files+=(\! -name "*.es")
                user_exclude_files+=(\! -name "*.iced")
                user_exclude_files+=(\! -name "*.liticed")
                user_exclude_files+=(\! -name "*.iced.md")
                user_exclude_files+=(\! -name "*.cs")
                user_exclude_files+=(\! -name "*.coffee")
                user_exclude_files+=(\! -name "*.litcoffee")
                user_exclude_files+=(\! -name "*.coffee.md")
                user_exclude_files+=(\! -name "*.ts")
                user_exclude_files+=(\! -name "*.tsx")
                user_exclude_files+=(\! -name "*.ls")
                user_exclude_files+=(\! -name "*.sjs")
                user_exclude_files+=(\! -name "*.eg")
                shift
                ;;
            -.*)
                user_include_files+=(-o -name "*.${1#-.}")
                shift
                ;;
            --.*)               # --.html only adds .html, for example
                user_include_files+=(-o -name "*.${1#--.}")
                shift
                ;;
            +.*)
                user_exclude_files+=(\! -name "*.${1#+.}")
                shift
                ;;
            ++.*)
                user_exclude_files+=(\! -name "*.${1#++.}")
                shift
                ;;
            *)
                break
                ;;
        esac
    done

    # parse command line arguments in the same way find does.

    declare -a find_options=()
    while (( $# )) ; do
        case "$1" in
            -P|-L|-H)
                find_options+=("$1")
                shift
                ;;
            -D|-O)
                if (( $# < 2 )) ; then
                    echo "option missing required argument - $1"
                    exit 1
                fi
                find_options+=("$1" "$2")
                shift 2
                ;;
            -D*|-O*)
                find_options+=("$1")
                shift
                ;;
            *)
                # ends options; starting point arguments follow
                break
                ;;
        esac
    done

    declare -a find_targets=()
    while (( $# )) ; do
        case "$1" in
            "!"|"("|-*)
                # ends starting points; find expression follows
                break
                ;;
            *)
                find_targets+=("$1")
                shift
                ;;
        esac
    done

    # File exclusions work a bit differently, so we don't need to do
    # this for them.
    if (( ${#user_include_files[@]} )) ; then
        user_include_files[0]='('
        user_include_files+=(')')
    fi

    declare -a command=(
        find "${find_options[@]}" \
             "${find_targets[@]}" \
             "${exclude_dirs[@]}" \
             "${user_include_files[@]}" \
             "${user_exclude_files[@]}" \
             "${exclude_files[@]}" \
             "$@"
    )
    if (( print_command )) ; then
        echo "${command[@]@Q}"
    else
        exec "${command[@]}"
    fi
}

list_excludes () {
    local i
    echo "# directories"
    for (( i = 5; i <= ${#exclude_dirs[@]}; i += 8 )) ; do
        echo "${exclude_dirs[$i]}"
    done | if [[ -t 1 ]] ; then fmt ; else cat ; fi
    echo "# files"
    for (( i = 2; i <= ${#exclude_files[@]}; i += 3 )) ; do
        echo "${exclude_files[$i]}"
    done | if [[ -t 1 ]] ; then fmt ; else cat ; fi
}

declare -a exclude_dirs=()
exclude_dirs () {
    (( $# < 1 )) && return
    exclude_dirs+=(   \! \( -type d -name "$1" -prune \)   )
}
. "$(dirname "$0")/../share/fe/exclude-dirs.sh"

declare -a exclude_files=()
exclude_files () {
    (( $# < 1 )) && return
    exclude_files+=(   \! -name "$1"   )
}
. "$(dirname "$0")/../share/fe/exclude-files.sh"

main "$@"
