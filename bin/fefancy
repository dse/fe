#!/usr/bin/env perl
use warnings;
use strict;
use open qw(locale);
use v5.10.0;
use utf8;

#------------------------------------------------------------------------------
use File::Basename qw(basename);
our $PROGNAME = basename($0);

#------------------------------------------------------------------------------
# options
our $context        = 0;
our $lineNumber     = 0;
our $initialTab     = 0;
our $kitty          = 0;
our $numberNonBlankLines = 0;        # a la kitty
our $column         = 0;

#------------------------------------------------------------------------------
# process options
use Getopt::Long;
Getopt::Long::Configure('bundling', 'gnu_compat', 'no_ignore_case');
Getopt::Long::GetOptions(
    'help'            => sub { usage(); exit(0); },
    'context'         => \$context,
    'line-number'     => \$lineNumber,
    'initial-tab'     => \$initialTab,
    'kitty'           => \$kitty,
    'number-nonblank' => \$numberNonBlankLines,
    'column=i'        => \$column,
) or die("Type '$PROGNAME --help' for help.\n");

sub usage { print(<<"END"); }
usage:
    $PROGNAME [<option> ...] [<filename> ...]
options:
        --help                  Display this message
END

###############################################################################

my $pp = My::IronSearcher::PostProcessor->new();

$pp->context($context);
$pp->lineNumber($lineNumber);
$pp->initialTab($initialTab);
$pp->kitty($kitty);
$pp->numberNonBlankLines($numberNonBlankLines);
$pp->column($column) if $column;

$pp->run();

###############################################################################

package My::IronSearcher::PostProcessor {
    use Moo;
    INIT {
        has context        => (is => 'rw');
        has lineNumber     => (is => 'rw');
        has initialTab     => (is => 'rw');
        has kitty          => (is => 'rw');
        has numberNonBlankLines => (is => 'rw');
        has column         => (is => 'rw');
    }
    sub run {
        my $self = shift;
        my $prevFilename;
        my $lastPrefix;
        my $separatorFlag = 0;

        my $FILENAME;
        my $RESET;

        if (-t 1) {
            $FILENAME = "\e[0;32m";
            $RESET = "\e[0m";
        } else {
            $FILENAME = "";
            $RESET = "";
        }

        while (<>) {
            s{\R\z}{};

            # /^--$/ separates chunks in grep context output
            if ($context) {
                if ($_ eq '--') {
                    $separatorFlag = 1;
                    next;
                }
            }

            # when fegrep runs fancy it always feeds tab-separated grep output
            # before the first tab, you may find:
            # - a filename
            # - ':', or '-' if context output
            # - optional space followed by a line number followed by ':' or '-'
            # all of that is removed from the line and becomes part of $prefix.
            # so all we have in $_ is the line itself
            unless (s{^(.*?)\t}{}) {
                print "$_\n";
                next;
            }
            my $prefix = $1;
            my $contextChar;

            #     filename.c:  55:<tab>
            # ==> filename.c:  55:
            if ($prefix =~ s{([-:])$}{}) {
                $contextChar = $1;
            }

            #     filename.c:  55:
            # ==> filename.c
            my $lineNumber;
            if ($self->lineNumber) {
                if ($prefix =~ s{\Q$contextChar\E\s*(\d+)$}{}) {
                    $lineNumber = $1;
                }
            }

            if (!defined $lastPrefix || $lastPrefix ne $prefix) {
                $separatorFlag = 0;
                if ($self->kitty) {
                    print "${FILENAME}==> $prefix <==${RESET}\n";
                } else {
                    print "${FILENAME}$prefix${RESET}\n";
                }
                $lastPrefix = $prefix;
            }

            if ($separatorFlag) {
                if ($self->kitty) {
                    print("\t--\n");
                } else {
                    print "    --\n";
                }
                $separatorFlag = 0;
            }

            if ($self->kitty) {
                if ($numberNonBlankLines) {
                    if (defined $contextChar && $contextChar ne ':') {
                        if ($contextChar eq '-') {
                            print("\t");
                        } else {
                            printf("%6s\t", $contextChar);
                        }
                    } else {
                        printf("%6d\t", $lineNumber);
                    }
                } else {
                    if ($lineNumber) {
                        if ($context && defined $contextChar) {
                            printf("%6d%s\t", $lineNumber, $contextChar);
                        } else {
                            printf("%6d\t", $lineNumber);
                        }
                    } else {
                        if ($context) {
                            if (defined $contextChar) {
                                printf("%s\t", $contextChar);
                            } else {
                                print("\t");
                            }
                        }
                    }
                }
            } else {
                print "    ";
                if ($lineNumber) {
                    printf("%6d%s", $lineNumber, $contextChar);
                }
                if ($self->initialTab) { # must be immediately before matching line
                    print "\t";
                }
            }
            print "$_\n";       # matching line
        }
    }
};
